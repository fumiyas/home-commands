#!/bin/bash
## or
#!/bin/ksh
## or
#!/bin/zsh
## -*- encoding: utf-8 -*-
##
## ＿人人人人人人＿
## ＞　突然の死　＜ ジェネレーター (Echo "sudden death" message)
## ￣Y^Y^Y^Y^Y^Y￣
## Copyright (C) 2013 SATOH Fumiyasu @ OSS Technology Corp., Japan
##               <https://github.com/fumiyas/home-commands/blob/master/echo-sd>
##               <https://twitter.com/satoh_fumiyasu>
##               <http://www.OSSTech.co.jp/>
##
## License: GNU General Public License version 3
##
## Requirements: bash 4.0+, ksh93+ or zsh 4.3+
##
## How to install:
##
##   $ mkdir -p $HOME/bin
##   $ cd $HOME/bin
##   $ wget -q https://raw.github.com/fumiyas/home-commands/master/echo-sd
##   $ chmod +x echo-sd
##   $ export PATH="$HOME/bin:$PATH"
##   $ alias echo=echo-sd
##
## Examples:
##
##   $ echo-sd
##    ＿人人人人人人＿
##   ＞　突然の死　＜
##   ￣Y^Y^Y^Y^Y^Y￣
##   $ echo-sd ぬるぽっ！!
##   ＿人人人人人人人人＿
##   ＞　ぬるぽっ！！　＜
##   ￣Y^Y^Y^Y^Y^YY^^Y￣
##   $ echo-sd -v ガッ！
##   ＿人人人＿
##   ＞　　　＜
##   ＞　ガ　＜
##   ＞　ッ　＜
##   ＞　！　＜
##   ＞　　　＜
##   ￣Y^Y^Y￣
##
## TODO:
##
##   * 縦書きモードでの複数行のセリフ対応
##

set -u

locale="${LC_CTYPE-${LANG-}}"
if [[ ${locale#*.} != @(UTF-8|utf-8|UTF8|utf8) ]]; then
  lang="ja_JP.UTF-8"
  if type locale >/dev/null 2>&1; then
    while read -r locale; do
      if [[ ${locale#*.} == @(UTF-8|utf-8|UTF8|utf8) ]]; then
	if [[ ${locale%.*} == ja_JP ]]; then
	  lang_ja="$locale"
	else
	  lang="$locale"
	fi
      fi
    done < <(locale -a)
  fi
  export LANG="${lang_ja-$lang}"
fi

if [[ ${1-} = -h ]]; then
  echo "Usage: echo-sd [-v] [script]"
  exit 0
fi

if [[ ${1-} = -v ]]; then
  vertical="set"
  shift
fi

script="${1-突然の死}"

if [[ -z ${vertical-} ]]; then
  template="${script//[ -~｡-ﾟ]/ }"
  template="${script//[ -~¢£¥¦¬¯｡-ﾟ]/ }"
  template="${template//[! ]/  }"

  header="＿人${template//  /人}人＿"
  footer="￣Y^${template//  /Y^}Y￣"

  echo "${header/ /}"
  echo "＞　${script}　＜"
  echo "${footer/ /}"
else
  typeset -A map
  map['。']='   。 '
  map['、']='   、 '
  map['ー']='  ｜  '
  map['…']='  ︙  '
  map['‥']='  ︰  '
  map['「']='    ┐'
  map['」']='└    '
  map['｢']='   ┐'
  map['｣']='└   '
  map['-']='  |  '
  map['ｰ']='  |  '
  map[',']="   ' "
  map['､']='   ` '

  script="　${script}　"
  template="${script//./?}"
  echo "＿人人人＿"
  while [[ -n $script ]]; do
    template="${template#?}"
    letter="${script%$template}"
    script="${script#?}"

    if [[ -z ${map[$letter]-} ]]; then
      template2="${template#?}"
      ten="${script%$template2}"
      if [[ $ten == @(ﾞ|ﾟ) ]] || [[ $letter == @(\!|\?) ]] && [[ $ten == @(\!|\?) ]]; then
	letter="  $letter$ten "
	template="${template#?}"
	script="${script#?}"
      else
	letter="  $letter  "
      fi
    else
      letter="${map[$letter]}"
    fi
    echo "＞${letter//  /　}＜"
  done
  echo "￣Y^Y^Y￣"
fi

exit 0

